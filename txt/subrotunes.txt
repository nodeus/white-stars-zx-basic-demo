16384 ws-sship screen (6912 bytes)
49152 leo sprite 14x16 (1792 bytes)
50945 spin1 sprites 1x21 (168 bytes)
51115 spin2 sprites 1x21 (168 bytes)
51285 stars sprites 1x3 (24 bytes)
51310 andr2 sprites 17x23 (3128 bytes)
54440 deffnt font (768 bytes)
55220 cubeudg UDG (64 bytes)
6132 bytes for all
------------------------------------------

Части:

0750 - LEO GO DEEPER
1110 - MOVING DEEP
1220 - CUBE TUNNEL
1430 - MOVING CUBE TUNNEL
1660 - DNA
1770 - STAR POETRY (MSGR #6)
1920 - NEW DNA
2210 - RAINBOW HELLO
2460 - VECTOR STAR
2640 - 3D BORING
3090 - HOP AROUND
4090 - SUPERNOVA (WONDER SQUARE)

------------------------------------------

номера строк бейсика:

[данные]

2790 - 2800 данные для 3D BORING
3300 - 4010 кадры для HOP AROUND
8000 - 8012 MSGR #1
8013 - 8021 MSGR #2
8022 - 8033 MSGR #3
8034 - 8054 MSGR #4
8055 - 8101 данные для NEW DNA
8102 - 8109 MSGR #5
8110 - 8113 данные для RAINBOW HELLO
8114 - 8118 MSGR #6
8120 - 8130 MSGR #7
8131 - 8134 данные для VECTOR STAR
8135 - 8137 MSGR #8
8138 - 8146 MSGR #9

[процедуры и подпрограммы]

20 DEF FN h(n) старший байт adr
30 DEF FN l(n) младший байт adr

------------------------------------------

11 расчет таблицы адресов для вывода UDG

на входе:
	y - размер выводимого блока по вертикали (знакомест)
	adr - адрес сохраненного спрайта в памяти
на выходе:
	a(n) - массив байт для переменной UDG low, high

------------------------------------------

12 переключение набора UDG

на входе:
	adr - адрес размещения набора

------------------------------------------

13 зажигание экрана из черного в белый

------------------------------------------

14 зажигание экрана из белого в черный

------------------------------------------

15 шторка сверху-вниз PAPER

------------------------------------------

16 моргание экрана

------------------------------------------

17 мессенджер

на входе:
	ty - y координата вывода
	n - кол-во строк в DATA

	пример вызова:
		restore xxx: let ty=5: let n=5: go sub 9100

------------------------------------------

18 мессенджер по левому краю

на входе:
	ty - y координата вывода
	tx - x координата вывода
	n - кол-во строк в DATA

	пример вызова:
		restore xxx: let ty=5: let tx=10: let n=5: go sub 9100

------------------------------------------
